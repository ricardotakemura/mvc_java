/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.slf4j:slf4j-simple:2.0.12'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'ch.qos.logback:logback-classic:1.5.3'
    implementation 'com.google.guava:guava:33.1.0-jre'
    implementation 'com.scylladb:java-driver-core:4.17.0.0'
    implementation 'com.scylladb:java-driver-query-builder:4.17.0.0'
    implementation 'org.glassfish.jersey.containers:jersey-container-jetty-http:3.1.5'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.1.5'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:3.1.5'
    implementation 'org.slf4j:slf4j-api:2.0.12'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.luizalabs.simple.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
